// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  password  String   @map("password")
  kind      Kind     @map("kind")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfo UserInfos?
  resume   Resumes[]

  @@map("Users")
}

enum Kind {
  USER
  ADMIN
}

model UserInfos {
  userInfoId Int      @id @default(autoincrement()) @map("userInfoId")
  userId     Int      @unique @map("userId")
  name       String   @map("name")
  age        Int      @map("age")
  college    String?  @map("college")
  gender     Gender?  @map("gender")
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)

  @@map("UserInfos")
}

enum Gender {
  FEMALE
  MALE
}

model Resumes {
  resumeId  Int      @id @default(autoincrement()) @map("resumeId")
  userId    Int      @map("userId")
  title     String   @map("title")
  content   String   @map("content") @db.Text
  status    Status   @map("status")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)

  @@map("Resumes")
}

enum Status {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
